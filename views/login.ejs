<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>    
    <link defer href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- CDN -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins',sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .container {
            position: relative;
            width: 850px;
            height: 550px;
            background: #fff;
            border-radius: 30px;
            box-shadow: 0 0 30px rgba(10, 10, 10, 0.2);
            margin: 10px;
            overflow: hidden;
        }
        .form-box {
            position: absolute;
            padding: 40px;
            width: 50%;
            height: 100%;
            right: 0;
            background: #fff;
            display: flex;
            align-items: center;
            color: #333;
            text-align: center;
            z-index: 1;
            transition: .6s ease-in-out 1.2s, visibility 0s 1s;
        }

        .container.active .form-box {
            right: 50%;
        }

        .form-box.register {
            visibility: hidden;
        }

        .container.active .form-box.register {
            visibility: visible;
        }

        .form {
            width: 100%;
        }

        .container h1 {
            font-size: 36px;
            margin: -10px 0;
        }

        .input-box {
            position: relative;
            margin: 30px 0;
        }
        .input-box input {
            width: 100%;
            padding: 13px 50px 13px 20px;
            background: #eee;
            border-radius: 8px;
            border: none;
            outline: none;
            font-size: 16px;
            color: #333;
            font-weight: 500;
        }

        .input-box input::placeholder {
            color: #888;
            font-weight: 400;
        }

        .input-box i {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #888;
        }

        .forgot-link {
            margin: -15px 0 15px;
        }

        .forgot-link a {
            font-size: 14.5px;
            color: #333;
            text-decoration: none;
        }
        .btn {
            width: 100%;
            height: 48px;
            background: #7494ec;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border: none;
            cursor: pointer;
            font-size: 16px;
            color: #fff;
            font-weight: 600;
        }

        .container p {
            font-size: 17px;
            margin: 15px 0;
        }
        
        .social-icons {
            display: flex;
            justify-content: center;
        }

        .social-icons a {
            display: inline-flex;
            padding: 10px;
            border: 2px solid #ccc;
            border-radius: 8px;
            font-size: 24px;
            color: #333;
            text-decoration: none;
            margin: 0 8px;
        }

        .toggle-box {
            position: relative;
            width: 100%;
            height: 100%;
        }

        .toggle-box::before {
            content : '';
            position: absolute;
            left: -250%;
            border-radius: 150px;
            width: 300%;
            height: 100%;
            background: #7494ec;
            z-index: 2;
            transition: 1.8s ease-in-out;
        }

        .container.active .toggle-box::before{
            left: 50%;
        }

        .toggle-panel {
            position: absolute;
            width: 50%;
            height: 100%;
            color: #fff;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 2;
            transition: .6s ease-in-out;
        }

        .toggle-panel.toggle-left {
            left: 0;
            transition-delay: 1.2s;
        }

        .container.active .toggle-panel.toggle-left {
            left: -50%;
            transition-delay: .6s;
        }
        
        .toggle-panel.toggle-right {
            right: -80%;
            transition-delay: .6s;
        }

        .container.active .toggle-panel.toggle-right {
            right: 0;
            transition-delay: 1.2s;
        }

        .toggle-panel p {
            margin-bottom: 20px;
        }

        .toggle-panel .btn {
            width: 160px;
            height: 46px;
            background: transparent;
            border: 2px solid #fff;
            box-shadow: none;
        }

        @media screen and (max-width: 650px){
            .container {
                height: calc(100vh - 20px);
            }

            .form-box {
                bottom: 0;
                width: 100%;
                height: 70%;
            }

            .container.active .form-box {
                right: 0;
                bottom: 30%;
            }

            .toggle-box::before {
                left: 0;
                top: -270%;
                width: 100%;
                height: 300%;
                border-radius: 20vw;
            }

            .container.active .toggle-box::before {
                top: 70%;
                left: 0;
            }

            .toggle-panel {
                width: 100%;
                height: 30%;
            }

            .toggle-panel.toggle-left {
                top: 0;
            }

            .container.active .toggle-panel.toggle-left {
                left: 0;
                top: -30%;
            }

            .toggle-panel.toggle-right {
                right: 0;
                bottom: -30%;
            }

            .container.active .toggle-panel.toggle-right {
                bottom: 0;
            }
        }

        @media screen and (max-width: 400px) {
            .form-box {
                padding: 20px;
            }

            .toggle-panel h1 {
                font-size: 30px;
            }
        }
    </style>
</head>
<!-- Box icons -->
<body class="bg-body-tertiary">
    <div class="container">
        <div class="form-box login">
            <div class="form">
                <h1>Login</h1>
                <div class="input-box">
                    <input type="text" placeholder="Email" required class="login-email">
                    <!-- icon -->
                </div>
                <div class="input-box">
                    <input type="password" placeholder="Password" required class="login-password">
                    <!-- icon -->
                </div>
                <div class="forgot-link">
                    <a href="#">Forgot Password</a>
                </div>
                <button class="btn login-button">Login</button>
                <p class="login-feedback"></p>
                <div class="social-icons">
                    <a href="#"></a>
                    <a href="#"></a>
                    <a href="#"></a>
                    <a href="#"></a>
                </div>
            </div>
        </div>

        <div class="form-box register">
            <div class="form">
                <h1>Register</h1>
                <div class="input-box">
                    <input type="text" placeholder="Username" required class="username">
                    <!-- icon -->
                </div>
                <div class="input-box">
                    <input type="text" placeholder="Email" class="register-email" required>
                    <!-- icon -->
                </div>
                <div class="input-box">
                    <input type="text" placeholder="Password" class="register-password" required>
                    <!-- icon -->
                </div>
                <button class="btn register-button">Register</button>
                <p class="register-feedback"></p>
                <div class="social-icons">
                    <a href="#"></a>
                    <a href="#"></a>
                    <a href="#"></a>
                    <a href="#"></a>
                </div>
            </div>
        </div>

        <div class="toggle-box">
            <div class="toggle-panel toggle-left">
                <h1>Hello, Welcome</h1>
                <p>Don't have an account?</p>
                <button class="btn register-btn">Register</button>
            </div>
            <div class="toggle-panel toggle-right">
                <h1>Welcome Back</h1>
                <p>Already have an account?</p>
                <button class="btn login-btn">Login</button>
            </div>
        </div>
    </div>
</body>
    <script>
        const container = document.querySelector('.container')
        const registerBtn = document.querySelector('.register-btn')
        const loginBtn = document.querySelector('.login-btn')
        registerBtn.addEventListener('click', () => {
            container.classList.add('active')
        })
        loginBtn.addEventListener('click', () => {
            container.classList.remove('active')
        })

        const login = document.querySelector('.login-button')
        const register = document.querySelector('.register-button')
        const loginEmail = document.querySelector('.login-email')
        const loginPassword = document.querySelector('.login-password')
        const username = document.querySelector('.username')
        const registerEmail = document.querySelector('.register-email')
        const registerPassword = document.querySelector('.register-password')
        const registerInfo = document.querySelector('.register-feedback')
        const loginInfo = document.querySelector('.login-feedback')

        function clear() {
            setTimeout(() => {
                loginInfo.textContent = ""
                loginEmail.value = ""
                loginPassword.value = ""
            }, 2500);
        }

        async function loginFunction() {
            const LE = loginEmail.value ? true : false
            const LP = loginPassword.value ? true : false
            const filled = LE && LP
            if (filled) {
                const user = {
                    email : loginEmail.value,
                    password : loginPassword.value
                }

                const options = {
                    method : 'POST',
                    headers : {
                        'Content-type' : 'application/json'
                    },
                    body : JSON.stringify(user)
                }

                try {
                    const response = await fetch('/auth/login', options)
                    if (!response.ok) {
                        throw new Error('Internal server error')
                    }
                    const data = await response.json()
                    // console.log(data.row.role)
                    if(typeof data === 'object') {
                        loginInfo.style.color = 'Green'
                        loginInfo.textContent = 'Logged in successfully'
                        setTimeout(() => {
                            if (data.user.role === 'user') {
                                location.assign('/user/home')
                            } else {
                                location.assign('/restaurant/page')
                            }
                            loginInfo.textContent = ""
                            loginEmail.value = ""
                            loginPassword.value = ""
                        }, 2500);
                    } else {
                        loginInfo.style.color = 'red'
                        loginInfo.textContent = data
                        clear()
                    }
                } catch (error) {
                    console.log('Failed to log in', error)
                    loginInfo.style.color = 'Red'
                    loginInfo.textContent = 'Failed to login try again later'
                    clear()
                }
            } else {
                loginInfo.style.color = 'Red'
                loginInfo.textContent = 'Kindly fill all input fields'
                setTimeout(() => {
                    loginInfo.textContent = ""
                }, 2000);
            }
            
        }

        async function registerFunction() {
            const RU = username.value ? true : false
            const RE = registerEmail.value ? true : false
            const RP = registerPassword.value ? true : false
            const filled = RU && RE && RP

            if (filled) {
                const user = {
                    username : username.value,
                    email : registerEmail.value,
                    password : registerPassword.value,
                    role : 'user'
                }
                console.log(user)

                const options = {
                    method : 'POST',
                    headers : {
                        'Content-type' : 'application/json'
                    },
                    body : JSON.stringify(user)
                }

                try {
                    const response = await fetch('/auth/register', options)
                    if (!response.ok) {
                        throw new Error('Internal server error')
                    }
                    const data = await response.json()
                    if(data === 'User registered successfully') {
                        registerInfo.style.color = 'green'
                        registerInfo.textContent = data
                        setTimeout(() => {
                            location.assign('/user/home')
                            registerInfo.textContent = ""
                            username.value = ""
                            registerEmail.value = ""
                            registerPassword.value = ""
                        }, 2500);
                    }
                } catch (error) {
                    console.log('Failed to log in', error)
                    registerInfo.style.color = 'Red'
                    registerInfo.textContent = 'Failed to register the user try again later'
                    setTimeout(() => {
                        registerInfo.textContent = ""
                        username.value = ""
                        registerEmail.value = ""
                        registerPassword.value = ""
                    }, 2500);
                }            
            } else {
                registerInfo.style.color = 'Red'
                registerInfo.textContent = 'Kindly fill all input fields'
                setTimeout(() => {
                    registerInfo.textContent = ""
                }, 2000);
            }
            
        }

        login.addEventListener('click', loginFunction)
        register.addEventListener('click', registerFunction)
    </script>
</html>